var searchIndex = {};
searchIndex['chill'] = {"items":[[3,"Client","chill","",null,null],[3,"Document","","",null,null],[3,"ErrorResponse","","Error information returned from the CouchDB server when an error occurs\nwhile processing the client's request.",null,null],[3,"Revision","","A document revision, which uniquely identifies a version of a document.",null,null],[4,"Error","","",null,null],[13,"DatabaseExists","","",0,null],[13,"DocumentConflict","","",0,null],[13,"NotFound","","",0,null],[13,"Unauthorized","","",0,null],[11,"new","","",1,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"result"}}],[11,"create_database","","",1,{"inputs":[{"name":"client"},{"name":"p"}],"output":{"name":"result"}}],[11,"create_document","","",1,{"inputs":[{"name":"client"},{"name":"p"},{"name":"c"}],"output":{"name":"result"}}],[11,"read_document","","",1,{"inputs":[{"name":"client"},{"name":"p"}],"output":{"name":"result"}}],[11,"update_document","","",1,{"inputs":[{"name":"client"},{"name":"document"}],"output":{"name":"result"}}],[11,"delete_document","","",1,{"inputs":[{"name":"client"},{"name":"p"},{"name":"revision"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"document"},{"name":"document"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"document"},{"name":"document"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"document"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",2,{"inputs":[{"name":"document"}],"output":{"name":"documentid"}}],[11,"revision","","",2,{"inputs":[{"name":"document"}],"output":{"name":"revision"}}],[11,"is_deleted","","",2,{"inputs":[{"name":"document"}],"output":{"name":"bool"}}],[11,"get_content","","",2,{"inputs":[{"name":"document"}],"output":{"name":"result"}}],[11,"set_content","","",2,{"inputs":[{"name":"document"},{"name":"c"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"errorresponse"},{"name":"errorresponse"}],"output":{"name":"ordering"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"errorresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"errorresponse"}],"output":{"name":"errorresponse"}}],[11,"error","","Returns the high-level name of the error—e.g., <q>file_exists</q>.",3,{"inputs":[{"name":"errorresponse"}],"output":{"name":"string"}}],[11,"reason","","Returns the low-level description of the error—e.g., <q>The database could\nnot be created, the file already exists.</q>",3,{"inputs":[{"name":"errorresponse"}],"output":{"name":"string"}}],[11,"fmt","","",3,{"inputs":[{"name":"errorresponse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"revision"},{"name":"revision"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"revision"},{"name":"revision"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"revision"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"revision"}],"output":{"name":"revision"}}],[11,"parse","","Constructs a new `Revision` from the given string.",4,{"inputs":[{"name":"revision"},{"name":"str"}],"output":{"name":"result"}}],[11,"sequence_number","","Returns the sequence number part of the revision.",4,{"inputs":[{"name":"revision"}],"output":{"name":"u64"}}],[11,"fmt","","",4,{"inputs":[{"name":"revision"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",4,{"inputs":[{"name":"revision"},{"name":"str"}],"output":{"name":"result"}}],[11,"from","collections::string","",5,{"inputs":[{"name":"string"},{"name":"revision"}],"output":{"name":"self"}}],[11,"serialize","chill","",4,{"inputs":[{"name":"revision"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",4,{"inputs":[{"name":"revision"},{"name":"d"}],"output":{"name":"result"}}],[11,"safe","hyper::method","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",6,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",6,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[11,"new","hyper::buffer","",7,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","",7,{"inputs":[{"name":"bufreader"},{"name":"r"},{"name":"usize"}],"output":{"name":"bufreader"}}],[11,"get_ref","","",7,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","",7,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_buf","","",7,null],[11,"into_inner","","",7,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read_into_buf","","",7,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"read","","",7,null],[11,"fill_buf","","",7,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",7,null],[11,"fmt","hyper::client::pool","",8,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",9,{"inputs":[{"name":"poolimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"scheme"}],"output":{"name":"scheme"}}],[11,"from","","",10,{"inputs":[{"name":"scheme"},{"name":"str"}],"output":{"name":"scheme"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",11,{"inputs":[{"name":"pool"},{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",11,{"inputs":[{"name":"pool"},{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",11,null],[11,"connect","","",11,{"inputs":[{"name":"pool"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"pooledstreaminner"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",13,null],[11,"write","","",13,null],[11,"flush","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",13,{"inputs":[{"name":"pooledstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",13,{"inputs":[{"name":"pooledstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"close","","",13,{"inputs":[{"name":"pooledstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_previous_response_expected_no_content","","",13,null],[11,"previous_response_expected_no_content","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"bool"}}],[11,"drop","","",13,null],[11,"headers","hyper::client::request","Read the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",14,{"inputs":[{"name":"request"}],"output":{"name":"method"}}],[11,"set_write_timeout","","Set the write timeout.",14,{"inputs":[{"name":"request"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout.",14,{"inputs":[{"name":"request"},{"name":"option"}],"output":{"name":"result"}}],[11,"with_message","","Create a new `Request<Fresh>` that will use the given `HttpMessage` for its communication\nwith the server. This implies that the given `HttpMessage` instance has already been\nproperly initialized by the caller (e.g. a TCP connection's already established).",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"new","","Create a new client request.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"write","","",14,null],[11,"flush","","",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"fmt","hyper::client::response","",15,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new response from a server.",15,{"inputs":[{"name":"response"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",15,{"inputs":[{"name":"response"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",15,{"inputs":[{"name":"response"}],"output":{"name":"rawstatus"}}],[11,"read","","",15,null],[11,"drop","","",15,null],[11,"fmt","hyper::client","",16,{"inputs":[{"name":"client"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new Client.",16,{"inputs":[{"name":"client"}],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",16,{"inputs":[{"name":"client"},{"name":"config"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",16,{"inputs":[{"name":"client"},{"name":"c"}],"output":{"name":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",16,{"inputs":[{"name":"client"},{"name":"p"}],"output":{"name":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",16,null],[11,"set_read_timeout","","Set the read timeout value for all requests.",16,null],[11,"set_write_timeout","","Set the write timeout value for all requests.",16,null],[11,"get","","Build a Get request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"head","","Build a Head request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"patch","","Build a Patch request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"post","","Build a Post request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"put","","Build a Put request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"delete","","Build a Delete request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",16,{"inputs":[{"name":"client"},{"name":"method"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"default","","",16,{"inputs":[{"name":"client"}],"output":{"name":"client"}}],[11,"body","","Set a request body to be sent.",17,{"inputs":[{"name":"requestbuilder"},{"name":"b"}],"output":{"name":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",17,{"inputs":[{"name":"requestbuilder"},{"name":"headers"}],"output":{"name":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",17,{"inputs":[{"name":"requestbuilder"},{"name":"h"}],"output":{"name":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",17,{"inputs":[{"name":"requestbuilder"}],"output":{"name":"result"}}],[11,"read","","",18,null],[11,"from","","",18,{"inputs":[{"name":"body"},{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","url","",19,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"fmt","hyper::client","",20,{"inputs":[{"name":"redirectpolicy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",20,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"fmt","hyper::error","",21,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"void"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",21,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",21,{"inputs":[{"name":"error"},{"name":"httperror"}],"output":{"name":"error"}}],[11,"fmt","hyper::method","",6,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"as_ref","","",6,{"inputs":[{"name":"method"}],"output":{"name":"str"}}],[11,"from_str","","",6,{"inputs":[{"name":"method"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",6,{"inputs":[{"name":"method"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",6,{"inputs":[{"name":"method"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept","",23,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"accept"}],"output":{"name":"accept"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",24,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",24,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",24,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",24,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",24,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",24,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",24,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",24,null],[11,"as_slice","","Extracts a slice containing the entire vector.",24,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",24,null],[11,"set_len","","Sets the length of a vector.",24,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",24,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",24,null],[11,"push","","Appends an element to the back of a collection.",24,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",24,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",24,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",24,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",24,null],[11,"len","","Returns the number of elements in the vector.",24,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",24,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",24,null],[11,"push_all","","",24,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",24,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",24,null],[11,"clone","collections::binary_heap","",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",25,null],[11,"default","","",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",25,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",25,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",25,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",25,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",25,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",25,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",25,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",25,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",25,null],[11,"drop","","",26,null],[11,"clone","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next_back","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"next_back","","",29,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",25,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",24,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",25,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",25,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",25,null],[11,"extend","","",25,null],[11,"new_leaf","collections::btree::node","",30,{"inputs":[{"name":"root"}],"output":{"name":"root"}}],[11,"as_ref","","",30,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"as_mut","","",30,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"into_ref","","",30,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"push_level","","Add a new internal node with a single edge, pointing to the previous root, and make that\nnew node the root. This increases the height by 1 and is the opposite of `pop_level`.",30,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"pop_level","","Remove the root node, using its first child as the new root. This cannot be called when\nthe tree consists only of a leaf node. As it is intended only to be called when the root\nhas only one edge, no cleanup is done on any of the other children are elements of the root.\nThis decreases the height by 1 and is the opposite of `push_level`.",30,null],[11,"clone","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"noderef"}}],[11,"len","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"usize"}}],[11,"forget_type","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"noderef"}}],[11,"keys","","",31,null],[11,"vals","","",31,null],[11,"ascend","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"result"}}],[11,"first_edge","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"handle"}}],[11,"last_edge","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"handle"}}],[11,"deallocate_and_ascend","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"deallocate_and_ascend","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"keys_mut","","",31,null],[11,"vals_mut","","",31,null],[11,"into_slices","","",31,null],[11,"into_root_mut","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"root"}}],[11,"into_slices_mut","","",31,null],[11,"push","","",31,null],[11,"push_front","","",31,null],[11,"push","","",31,null],[11,"push_front","","",31,null],[11,"pop","","",31,null],[11,"pop_front","","",31,null],[11,"force","","",31,{"inputs":[{"name":"noderef"}],"output":{"name":"forceresult"}}],[11,"clone","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_node","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"new_kv","","",32,{"inputs":[{"name":"handle"},{"name":"noderef"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"left_edge","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"eq","","",32,{"inputs":[{"name":"handle"},{"name":"handle"}],"output":{"name":"bool"}}],[11,"reborrow","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"reborrow_mut","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"new_edge","","",32,{"inputs":[{"name":"handle"},{"name":"noderef"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"left_kv","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"right_kv","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"insert","","",32,null],[11,"insert","","",32,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"root"}],"output":{"name":"insertresult"}}],[11,"descend","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"noderef"}}],[11,"into_kv","","",32,null],[11,"into_kv_mut","","",32,null],[11,"kv_mut","","",32,null],[11,"split","","",32,null],[11,"remove","","",32,null],[11,"split","","",32,null],[11,"can_merge","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"bool"}}],[11,"merge","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"force","","",32,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"drop","collections::btree::map","",33,null],[11,"clone","","",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",33,null],[11,"get","","Returns a reference to the value corresponding to the key.",33,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",33,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",33,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",33,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",33,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",33,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",33,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",33,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"next","","",34,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[11,"next_back","","",34,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"len","","",34,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"clone","","",34,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",35,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"next_back","","",35,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"len","","",35,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"into_iter","","",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[11,"drop","","",36,null],[11,"next","","",36,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"next_back","","",36,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"len","","",36,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"next_back","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"next_back","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",39,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",39,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",39,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",40,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",40,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"from_iter","","",33,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",33,null],[11,"extend","","",33,null],[11,"hash","","",33,null],[11,"default","","",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",33,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",33,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",33,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",33,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",33,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",41,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",41,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",42,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"partial_cmp","collections::btree::set","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"clone","","",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",44,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",44,null],[11,"contains","","Returns `true` if the set contains a value.",44,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",44,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",44,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",44,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",44,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",44,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",44,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"option"}}],[11,"from_iter","","",44,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet's contents.",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[11,"extend","","",44,null],[11,"extend","","",44,null],[11,"default","","",44,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"fmt","","",44,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",45,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"next_back","","",45,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",46,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"next_back","","",46,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",47,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",47,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",48,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",49,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",49,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",51,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","collections::borrow","",52,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",52,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",52,null],[11,"into_owned","","Extracts the owned data.",52,null],[11,"deref","","",52,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",52,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",52,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",52,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"into_cow","","",52,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",52,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",53,null],[11,"cmp","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",53,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",53,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",53,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",53,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",53,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",53,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",53,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",53,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",53,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[11,"sub","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitor","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitand","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitxor","","",53,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"from_iter","","",53,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"clone","core::fmt::rt::v1","",55,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",56,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",57,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",58,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",59,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::linked_list","",60,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",62,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",62,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",63,null],[11,"iter","","Provides a forward iterator.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",63,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",63,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",63,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",63,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",63,null],[11,"next","","",60,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",64,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",63,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",63,null],[11,"extend","","",63,null],[11,"eq","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",63,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"start","core::ops","",65,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",66,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"borrow","collections::vec","",24,null],[11,"borrow_mut","","",24,null],[11,"clone","collections::str","",68,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",68,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"borrow","collections::string","",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",69,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",70,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",71,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",70,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",70,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",70,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",72,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",73,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",74,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",75,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",76,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",77,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",75,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",78,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",79,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",79,null],[11,"matching","","",79,null],[11,"use_early_reject","","",80,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",80,null],[11,"matching","","",80,null],[11,"cmp","collections::string","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",5,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",5,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",5,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",5,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",5,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",5,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",5,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",5,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",5,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",5,null],[11,"capacity","","Returns this `String`'s capacity, in bytes.",5,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`'s capacity is at least `additional` bytes\nlarger than its length.",5,null],[11,"reserve_exact","","Ensures that this `String`'s capacity is `additional` bytes\nlarger than its length.",5,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",5,null],[11,"push","","Appends the given `char` to the end of this `String`.",5,null],[11,"as_bytes","","Returns a byte slice of this `String`'s contents.",5,null],[11,"truncate","","Shortens this `String` to the specified length.",5,null],[11,"pop","","Removes the last character from the string buffer and returns it.",5,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",5,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",5,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",5,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",5,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",5,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",5,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",5,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box<str>`.",5,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",81,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",81,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",81,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",5,null],[11,"from_iter","","",5,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",5,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",5,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",5,null],[11,"extend","","",5,null],[11,"extend","","",5,null],[11,"extend","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",52,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",5,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",5,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",5,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"add","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",5,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",5,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",5,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",5,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",5,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",5,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",5,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",5,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",83,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",5,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",5,null],[11,"from","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",52,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",52,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",5,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",5,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",5,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",5,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",84,null],[11,"next","","",84,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","collections::vec","",24,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",24,null],[11,"hash","","",24,null],[11,"index","","",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",24,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index_mut","","",24,null],[11,"index_mut","","",24,null],[11,"index_mut","","",24,null],[11,"index_mut","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"from_iter","","",24,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",24,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",24,null],[11,"extend","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","collections::borrow","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"partial_cmp","","",24,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",24,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",24,null],[11,"default","","",24,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",24,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",24,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",24,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",24,null],[11,"as_mut","","",24,null],[11,"from","","",24,null],[11,"from","","",24,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",52,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",24,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",85,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"count","","",85,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",85,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",85,null],[11,"next","","",86,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",86,null],[11,"clone","collections::vec_deque","",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",87,null],[11,"default","","",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",87,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",87,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",87,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",87,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",87,null],[11,"iter","","Returns a front-to-back iterator.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",87,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",87,null],[11,"len","","Returns the number of elements in the `VecDeque`.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",87,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",87,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",87,null],[11,"push_back","","Appends an element to the back of a buffer",87,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",87,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",87,null],[11,"retain","","Retains only the elements specified by the predicate.",87,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",87,null],[11,"clone","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",91,null],[11,"next","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",87,null],[11,"index","","",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",87,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",87,null],[11,"extend","","",87,null],[11,"fmt","","",87,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","collections","",92,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",92,null],[11,"fmt","","",92,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"clone","alloc::boxed","",93,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",94,null],[11,"make_place","","",94,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",94,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",95,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",93,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",94,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",95,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",95,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",95,null],[11,"default","","",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",95,null],[11,"clone","","",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",95,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",95,null],[11,"from","","",95,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",95,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",95,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",95,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",95,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",95,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",95,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref","hyper::header::common::accept","",23,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"header_name","","",23,{"inputs":[{"name":"accept"}],"output":{"name":"str"}}],[11,"parse_header","","",23,null],[11,"fmt_header","","",23,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",23,{"inputs":[{"name":"accept"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",23,{"inputs":[{"name":"accept"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::access_control_allow_credentials","",96,{"inputs":[{"name":"accesscontrolallowcredentials"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"},{"name":"accesscontrolallowcredentials"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"},{"name":"accesscontrolallowcredentials"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"}],"output":{"name":"accesscontrolallowcredentials"}}],[11,"header_name","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"}],"output":{"name":"str"}}],[11,"parse_header","","",96,null],[11,"fmt_header","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"accesscontrolallowcredentials"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_headers","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"accesscontrolallowheaders"}}],[11,"deref","","",97,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",97,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",97,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",97,null],[11,"fmt_header","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",97,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_methods","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"accesscontrolallowmethods"}}],[11,"deref","","",98,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"deref_mut","","",98,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"header_name","","",98,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"str"}}],[11,"parse_header","","",98,null],[11,"fmt_header","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",98,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::access_control_allow_origin","",99,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",99,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"header_name","","",99,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"str"}}],[11,"parse_header","","",99,null],[11,"fmt_header","","",99,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_expose_headers","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"accesscontrolexposeheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"}],"output":{"name":"accesscontrolexposeheaders"}}],[11,"deref","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",100,null],[11,"fmt_header","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",100,{"inputs":[{"name":"accesscontrolexposeheaders"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_max_age","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"accesscontrolmaxage"}}],[11,"deref","","",101,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"deref_mut","","",101,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"header_name","","",101,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"str"}}],[11,"parse_header","","",101,null],[11,"fmt_header","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",101,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_headers","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"accesscontrolrequestheaders"}}],[11,"deref","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",102,null],[11,"fmt_header","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",102,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_method","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"accesscontrolrequestmethod"}}],[11,"deref","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"deref_mut","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"header_name","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"str"}}],[11,"parse_header","","",103,null],[11,"fmt_header","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",103,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_charset","",104,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"acceptcharset"}}],[11,"deref","","",104,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"deref_mut","","",104,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"header_name","","",104,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"str"}}],[11,"parse_header","","",104,null],[11,"fmt_header","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",104,{"inputs":[{"name":"acceptcharset"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_encoding","",105,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"acceptencoding"}}],[11,"deref","","",105,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",105,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",105,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",105,null],[11,"fmt_header","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",105,{"inputs":[{"name":"acceptencoding"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_language","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"acceptlanguage"}}],[11,"deref","","",106,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",106,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",106,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",106,null],[11,"fmt_header","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",106,{"inputs":[{"name":"acceptlanguage"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_ranges","",107,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"acceptranges"}],"output":{"name":"acceptranges"}}],[11,"deref","","",107,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"deref_mut","","",107,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"header_name","","",107,{"inputs":[{"name":"acceptranges"}],"output":{"name":"str"}}],[11,"parse_header","","",107,null],[11,"fmt_header","","",107,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",107,{"inputs":[{"name":"acceptranges"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",107,{"inputs":[{"name":"acceptranges"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"fmt","","",108,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"rangeunit"}],"output":{"name":"rangeunit"}}],[11,"from_str","","",108,{"inputs":[{"name":"rangeunit"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::allow","",109,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"fmt","","",109,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"allow"}],"output":{"name":"allow"}}],[11,"deref","","",109,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"deref_mut","","",109,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"header_name","","",109,{"inputs":[{"name":"allow"}],"output":{"name":"str"}}],[11,"parse_header","","",109,null],[11,"fmt_header","","",109,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",109,{"inputs":[{"name":"allow"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",109,{"inputs":[{"name":"allow"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",110,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"authorization"}],"output":{"name":"authorization"}}],[11,"deref","","",110,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"deref_mut","","",110,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"header_name","","",110,{"inputs":[{"name":"authorization"}],"output":{"name":"str"}}],[11,"parse_header","","",110,null],[11,"fmt_header","","",110,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","collections::string","",5,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",5,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",111,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",111,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"basic"}],"output":{"name":"basic"}}],[11,"scheme","","",111,{"inputs":[{"name":"basic"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",111,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"basic"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"bearer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"bearer"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"bearer"},{"name":"bearer"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"bearer"}],"output":{"name":"bearer"}}],[11,"scheme","","",112,{"inputs":[{"name":"bearer"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",112,{"inputs":[{"name":"bearer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",112,{"inputs":[{"name":"bearer"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cache_control","",113,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"cachecontrol"}}],[11,"eq","","",113,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"deref","","",113,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"deref_mut","","",113,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"header_name","","",113,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"str"}}],[11,"parse_header","","",113,null],[11,"fmt_header","","",113,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"cachedirective"}],"output":{"name":"cachedirective"}}],[11,"eq","","",114,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",114,{"inputs":[{"name":"cachedirective"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cookie","",115,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"cookie"}],"output":{"name":"cookie"}}],[11,"deref","","",115,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",115,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"header_name","","",115,{"inputs":[{"name":"cookie"}],"output":{"name":"str"}}],[11,"parse_header","","",115,null],[11,"fmt_header","","",115,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",115,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",115,{"inputs":[{"name":"cookie"},{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"fmt","hyper::header::common::connection","",116,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"connectionoption"}],"output":{"name":"connectionoption"}}],[11,"from_str","","",116,{"inputs":[{"name":"connectionoption"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"fmt","","",117,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"deref","","",117,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"deref_mut","","",117,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"header_name","","",117,{"inputs":[{"name":"connection"}],"output":{"name":"str"}}],[11,"parse_header","","",117,null],[11,"fmt_header","","",117,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",117,{"inputs":[{"name":"connection"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",117,{"inputs":[{"name":"connection"},{"name":"d"}],"output":{"name":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",117,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",117,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"eq","hyper::header::common::content_disposition","",118,{"inputs":[{"name":"dispositiontype"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"dispositiontype"},{"name":"dispositiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",118,{"inputs":[{"name":"dispositiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"dispositiontype"}],"output":{"name":"dispositiontype"}}],[11,"eq","","",119,{"inputs":[{"name":"dispositionparam"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"dispositionparam"},{"name":"dispositionparam"}],"output":{"name":"bool"}}],[11,"fmt","","",119,{"inputs":[{"name":"dispositionparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"dispositionparam"}],"output":{"name":"dispositionparam"}}],[11,"eq","","",120,{"inputs":[{"name":"contentdisposition"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"contentdisposition"},{"name":"contentdisposition"}],"output":{"name":"bool"}}],[11,"fmt","","",120,{"inputs":[{"name":"contentdisposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"contentdisposition"}],"output":{"name":"contentdisposition"}}],[11,"header_name","","",120,{"inputs":[{"name":"contentdisposition"}],"output":{"name":"str"}}],[11,"parse_header","","",120,null],[11,"fmt_header","","",120,{"inputs":[{"name":"contentdisposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"contentdisposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_encoding","",121,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",121,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"contentencoding"}],"output":{"name":"contentencoding"}}],[11,"deref","","",121,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",121,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",121,{"inputs":[{"name":"contentencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",121,null],[11,"fmt_header","","",121,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",121,{"inputs":[{"name":"contentencoding"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",121,{"inputs":[{"name":"contentencoding"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_language","",122,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"contentlanguage"}}],[11,"deref","","",122,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",122,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",122,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",122,null],[11,"fmt_header","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",122,{"inputs":[{"name":"contentlanguage"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_length","",123,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"contentlength"}],"output":{"name":"contentlength"}}],[11,"header_name","","",123,{"inputs":[{"name":"contentlength"}],"output":{"name":"str"}}],[11,"parse_header","","",123,null],[11,"fmt_header","","",123,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",123,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",123,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"deref_mut","","",123,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"serialize","","",123,{"inputs":[{"name":"contentlength"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",123,{"inputs":[{"name":"contentlength"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_range","",124,{"inputs":[{"name":"contentrange"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"contentrange"},{"name":"contentrange"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"contentrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"contentrange"}],"output":{"name":"contentrange"}}],[11,"deref","","",124,{"inputs":[{"name":"contentrange"}],"output":{"name":"contentrangespec"}}],[11,"deref_mut","","",124,{"inputs":[{"name":"contentrange"}],"output":{"name":"contentrangespec"}}],[11,"header_name","","",124,{"inputs":[{"name":"contentrange"}],"output":{"name":"str"}}],[11,"parse_header","","",124,null],[11,"fmt_header","","",124,{"inputs":[{"name":"contentrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"contentrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",124,{"inputs":[{"name":"contentrange"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",124,{"inputs":[{"name":"contentrange"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"contentrangespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"contentrangespec"}],"output":{"name":"contentrangespec"}}],[11,"eq","","",125,{"inputs":[{"name":"contentrangespec"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"contentrangespec"},{"name":"contentrangespec"}],"output":{"name":"bool"}}],[11,"from_str","","",125,{"inputs":[{"name":"contentrangespec"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"contentrangespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_type","",126,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"get_param","mime","",127,{"inputs":[{"name":"mime"},{"name":"a"}],"output":{"name":"option"}}],[11,"hash","","",127,null],[11,"fmt","","",127,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"eq","","",127,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"hash","","",128,null],[11,"fmt","","",128,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"as_str","","",128,{"inputs":[{"name":"toplevel"}],"output":{"name":"str"}}],[11,"deref","","",128,{"inputs":[{"name":"toplevel"}],"output":{"name":"str"}}],[11,"eq","","",128,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"eq","","",128,{"inputs":[{"name":"toplevel"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",128,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",128,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",5,{"inputs":[{"name":"string"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","mime","",128,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",128,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"fmt","","",129,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"as_str","","",129,{"inputs":[{"name":"sublevel"}],"output":{"name":"str"}}],[11,"deref","","",129,{"inputs":[{"name":"sublevel"}],"output":{"name":"str"}}],[11,"eq","","",129,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"eq","","",129,{"inputs":[{"name":"sublevel"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",129,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",129,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",5,{"inputs":[{"name":"string"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","mime","",129,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",129,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"fmt","","",130,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"as_str","","",130,{"inputs":[{"name":"attr"}],"output":{"name":"str"}}],[11,"deref","","",130,{"inputs":[{"name":"attr"}],"output":{"name":"str"}}],[11,"eq","","",130,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"attr"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",5,{"inputs":[{"name":"string"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","mime","",130,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",130,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"fmt","","",131,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"as_str","","",131,{"inputs":[{"name":"value"}],"output":{"name":"str"}}],[11,"deref","","",131,{"inputs":[{"name":"value"}],"output":{"name":"str"}}],[11,"eq","","",131,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"eq","","",131,{"inputs":[{"name":"value"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",131,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",131,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",5,{"inputs":[{"name":"string"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","mime","",131,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",127,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[11,"serialize","","",127,{"inputs":[{"name":"mime"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",127,{"inputs":[{"name":"mime"},{"name":"d"}],"output":{"name":"result"}}],[11,"deref","hyper::header::common::content_type","",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"deref_mut","","",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"header_name","","",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"str"}}],[11,"parse_header","","",126,null],[11,"fmt_header","","",126,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",126,{"inputs":[{"name":"contenttype"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",126,{"inputs":[{"name":"contenttype"},{"name":"d"}],"output":{"name":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json; charset=utf-8` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",126,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"eq","hyper::header::common::date","",132,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[11,"deref","","",132,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",132,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"header_name","","",132,{"inputs":[{"name":"date"}],"output":{"name":"str"}}],[11,"parse_header","","",132,null],[11,"fmt_header","","",132,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",132,{"inputs":[{"name":"date"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",132,{"inputs":[{"name":"date"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::etag","",133,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"fmt","","",133,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"etag"}],"output":{"name":"etag"}}],[11,"new","hyper::header::shared::entity","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",134,{"inputs":[{"name":"entitytag"},{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",134,{"inputs":[{"name":"entitytag"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",134,{"inputs":[{"name":"entitytag"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",134,{"inputs":[{"name":"entitytag"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",134,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as \"weak\".",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"deref","hyper::header::common::etag","",133,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",133,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"header_name","","",133,{"inputs":[{"name":"etag"}],"output":{"name":"str"}}],[11,"parse_header","","",133,null],[11,"fmt_header","","",133,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",133,{"inputs":[{"name":"etag"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",133,{"inputs":[{"name":"etag"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::expect","",135,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",135,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"expect"}],"output":{"name":"expect"}}],[11,"header_name","","",135,{"inputs":[{"name":"expect"}],"output":{"name":"str"}}],[11,"parse_header","","",135,null],[11,"fmt_header","","",135,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::expires","",136,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"fmt","","",136,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"expires"}],"output":{"name":"expires"}}],[11,"deref","","",136,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",136,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"header_name","","",136,{"inputs":[{"name":"expires"}],"output":{"name":"str"}}],[11,"parse_header","","",136,null],[11,"fmt_header","","",136,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",136,{"inputs":[{"name":"expires"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",136,{"inputs":[{"name":"expires"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::from","",137,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"from"}],"output":{"name":"from"}}],[11,"deref","","",137,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"deref_mut","","",137,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"header_name","","",137,{"inputs":[{"name":"from"}],"output":{"name":"str"}}],[11,"parse_header","","",137,null],[11,"fmt_header","","",137,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",137,{"inputs":[{"name":"from"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",137,{"inputs":[{"name":"from"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::host","",138,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",138,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"header_name","","",138,{"inputs":[{"name":"host"}],"output":{"name":"str"}}],[11,"parse_header","","",138,null],[11,"fmt_header","","",138,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_match","",139,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"ifmatch"}],"output":{"name":"ifmatch"}}],[11,"header_name","","",139,{"inputs":[{"name":"ifmatch"}],"output":{"name":"str"}}],[11,"parse_header","","",139,null],[11,"fmt_header","","",139,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",139,{"inputs":[{"name":"ifmatch"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",139,{"inputs":[{"name":"ifmatch"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_modified_since","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"ifmodifiedsince"}}],[11,"deref","","",140,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",140,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",140,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",140,null],[11,"fmt_header","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",140,{"inputs":[{"name":"ifmodifiedsince"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_none_match","",141,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"ifnonematch"}}],[11,"header_name","","",141,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"str"}}],[11,"parse_header","","",141,null],[11,"fmt_header","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",141,{"inputs":[{"name":"ifnonematch"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_range","",142,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"ifrange"}],"output":{"name":"ifrange"}}],[11,"header_name","","",142,{"inputs":[{"name":"ifrange"}],"output":{"name":"str"}}],[11,"parse_header","","",142,null],[11,"fmt_header","","",142,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_unmodified_since","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"ifunmodifiedsince"}}],[11,"deref","","",143,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",143,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",143,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",143,null],[11,"fmt_header","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",143,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::last_modified","",144,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"lastmodified"}],"output":{"name":"lastmodified"}}],[11,"deref","","",144,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",144,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"header_name","","",144,{"inputs":[{"name":"lastmodified"}],"output":{"name":"str"}}],[11,"parse_header","","",144,null],[11,"fmt_header","","",144,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",144,{"inputs":[{"name":"lastmodified"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",144,{"inputs":[{"name":"lastmodified"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::location","",145,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[11,"deref","","",145,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"deref_mut","","",145,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"header_name","","",145,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"parse_header","","",145,null],[11,"fmt_header","","",145,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",145,{"inputs":[{"name":"location"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",145,{"inputs":[{"name":"location"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::pragma","",146,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"pragma"}],"output":{"name":"pragma"}}],[11,"header_name","","",146,{"inputs":[{"name":"pragma"}],"output":{"name":"str"}}],[11,"parse_header","","",146,null],[11,"fmt_header","","",146,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::range","",147,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"eq","","",147,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"fmt","","",148,{"inputs":[{"name":"byterangespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"byterangespec"}],"output":{"name":"byterangespec"}}],[11,"eq","","",148,{"inputs":[{"name":"byterangespec"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"byterangespec"},{"name":"byterangespec"}],"output":{"name":"bool"}}],[11,"bytes","","Get the most common byte range header (\"bytes=from-to\")",147,{"inputs":[{"name":"range"},{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(\"bytes=from1-to1,from2-to2,fromX-toX\")",147,{"inputs":[{"name":"range"},{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",148,{"inputs":[{"name":"byterangespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",147,{"inputs":[{"name":"range"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",148,{"inputs":[{"name":"byterangespec"},{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",147,{"inputs":[{"name":"range"}],"output":{"name":"str"}}],[11,"parse_header","","",147,null],[11,"fmt_header","","",147,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::referer","",149,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"fmt","","",149,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"referer"}],"output":{"name":"referer"}}],[11,"deref","","",149,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"deref_mut","","",149,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"header_name","","",149,{"inputs":[{"name":"referer"}],"output":{"name":"str"}}],[11,"parse_header","","",149,null],[11,"fmt_header","","",149,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",149,{"inputs":[{"name":"referer"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",149,{"inputs":[{"name":"referer"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::server","",150,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"fmt","","",150,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"server"}],"output":{"name":"server"}}],[11,"deref","","",150,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"deref_mut","","",150,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"header_name","","",150,{"inputs":[{"name":"server"}],"output":{"name":"str"}}],[11,"parse_header","","",150,null],[11,"fmt_header","","",150,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",150,{"inputs":[{"name":"server"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",150,{"inputs":[{"name":"server"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::set_cookie","",151,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"setcookie"}],"output":{"name":"setcookie"}}],[11,"deref","","",151,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",151,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"header_name","","",151,{"inputs":[{"name":"setcookie"}],"output":{"name":"str"}}],[11,"parse_header","","",151,null],[11,"fmt_header","","",151,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",151,{"inputs":[{"name":"setcookie"},{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",151,null],[11,"fmt","hyper::header::common::strict_transport_security","",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"stricttransportsecurity"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"stricttransportsecurity"}],"output":{"name":"stricttransportsecurity"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",152,{"inputs":[{"name":"stricttransportsecurity"}],"output":{"name":"str"}}],[11,"parse_header","","",152,null],[11,"fmt_header","","",152,{"inputs":[{"name":"stricttransportsecurity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::transfer_encoding","",153,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"transferencoding"}],"output":{"name":"transferencoding"}}],[11,"deref","","",153,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",153,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",153,{"inputs":[{"name":"transferencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",153,null],[11,"fmt_header","","",153,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",153,{"inputs":[{"name":"transferencoding"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",153,{"inputs":[{"name":"transferencoding"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::upgrade","",154,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"upgrade"}],"output":{"name":"upgrade"}}],[11,"deref","","",154,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"deref_mut","","",154,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"header_name","","",154,{"inputs":[{"name":"upgrade"}],"output":{"name":"str"}}],[11,"parse_header","","",154,null],[11,"fmt_header","","",154,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",154,{"inputs":[{"name":"upgrade"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",154,{"inputs":[{"name":"upgrade"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"protocolname"}],"output":{"name":"protocolname"}}],[11,"from_str","","",155,{"inputs":[{"name":"protocolname"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"new","","Creates a new Protocol with the given name and version",156,{"inputs":[{"name":"protocol"},{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",156,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::user_agent","",157,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"fmt","","",157,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"useragent"}],"output":{"name":"useragent"}}],[11,"deref","","",157,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"deref_mut","","",157,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"header_name","","",157,{"inputs":[{"name":"useragent"}],"output":{"name":"str"}}],[11,"parse_header","","",157,null],[11,"fmt_header","","",157,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",157,{"inputs":[{"name":"useragent"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",157,{"inputs":[{"name":"useragent"},{"name":"d"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::vary","",158,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"fmt","","",158,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"vary"}],"output":{"name":"vary"}}],[11,"header_name","","",158,{"inputs":[{"name":"vary"}],"output":{"name":"str"}}],[11,"parse_header","","",158,null],[11,"fmt_header","","",158,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",158,{"inputs":[{"name":"vary"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",158,{"inputs":[{"name":"vary"},{"name":"d"}],"output":{"name":"result"}}],[11,"new","hyper::header::internals::cell","",159,{"inputs":[{"name":"optcell"},{"name":"option"}],"output":{"name":"optcell"}}],[11,"set","","",159,null],[11,"get_mut","","",159,{"inputs":[{"name":"optcell"}],"output":{"name":"t"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",160,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",160,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",160,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",160,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",160,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",160,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",160,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",160,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",160,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",160,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",160,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",160,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",160,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",160,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",160,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",160,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",161,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"shl","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",161,null],[11,"shr","","",161,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"add","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",161,null],[11,"sub","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",161,null],[11,"mul","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",161,null],[11,"div","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",161,null],[11,"rem","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",161,null],[11,"not","","",161,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",161,null],[11,"bitor","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",161,null],[11,"bitand","","",161,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",161,null],[11,"eq","core::num::flt2dec::decoder","",162,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",162,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",163,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",164,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",164,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",164,null],[11,"clone","","",165,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",165,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",165,null],[11,"fmt","","",166,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",166,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",167,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",167,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",168,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",169,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",169,null],[11,"eq","","",170,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",170,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",171,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",171,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",172,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",172,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",173,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",173,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",173,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",173,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",173,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",173,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",173,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",173,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",173,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",173,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",173,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",173,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",173,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",173,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",173,null],[11,"eq","","",173,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",173,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",173,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",173,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",174,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",174,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",174,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",174,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",174,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",174,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",174,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",174,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",174,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",174,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",174,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",174,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",174,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",174,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",174,null],[11,"eq","","",174,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",174,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",174,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",174,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",174,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",175,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",175,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",175,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",175,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",176,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",177,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",177,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",178,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",178,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",179,null],[11,"fmt","","",179,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",179,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",179,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",180,null],[11,"get","","Dereferences the content.",180,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",180,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",180,null],[11,"fmt","","",180,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",181,null],[11,"clone","","",181,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",181,null],[11,"fmt","","",181,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",182,null],[11,"eq","","",182,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",182,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",182,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",182,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",182,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",183,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",183,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",67,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",65,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",66,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",184,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",184,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",184,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",184,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",184,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","chill","",185,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",185,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",185,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",185,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",185,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",185,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",185,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",186,null],[11,"fmt","","",186,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",186,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",186,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",187,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",188,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",189,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",190,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",191,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",187,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",187,null],[11,"swap","","Stores a value into the bool, returning the old value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",187,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",188,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",188,null],[11,"swap","","Stores a value into the isize, returning the old value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",188,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",189,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",189,null],[11,"swap","","Stores a value into the usize, returning the old value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",189,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",190,null],[11,"load","","Loads a value from the pointer.",190,null],[11,"store","","Stores a value into the pointer.",190,null],[11,"swap","","Stores a value into the pointer, returning the old value.",190,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",190,null],[11,"fmt","","",189,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",190,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",192,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",192,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",192,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",192,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",192,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",192,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",192,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",193,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",193,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",194,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",194,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",194,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",194,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",194,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",194,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",194,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",194,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",194,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",195,null],[11,"clone","","",195,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",196,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",196,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",196,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",196,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",197,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",197,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",198,null],[11,"deref","","",197,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",197,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",199,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",199,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",199,null],[11,"clone","core::char","",200,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",201,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",200,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",200,null],[11,"clone","","",202,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",203,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",202,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",202,null],[11,"count","","",202,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",202,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",202,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",204,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",204,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",204,null],[11,"next_back","","",204,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",205,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",205,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",205,null],[11,"next_back","","",205,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",206,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",206,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",206,null],[11,"clone","","",207,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",208,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",207,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",207,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",207,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",207,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",207,null],[11,"next_back","","",207,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",209,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",209,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",209,null],[11,"next_back","","",209,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",210,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",210,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",210,null],[11,"next_back","","",210,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",211,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",211,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",211,null],[11,"next_back","","",211,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",212,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",212,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",212,null],[11,"next_back","","",212,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",213,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",213,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",213,null],[11,"nth","","",213,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",213,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",213,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",214,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",214,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",214,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",214,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",214,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",214,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",214,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",214,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",215,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",215,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",215,null],[11,"clone","","",216,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",216,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",216,null],[11,"clone","","",217,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",217,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",217,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",217,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",217,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",217,null],[11,"clone","","",218,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",218,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",218,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"clone","","",219,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",219,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",219,null],[11,"clone","","",220,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",220,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",220,null],[11,"next_back","","",220,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",221,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",221,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",221,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",221,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",221,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",221,null],[11,"next_back","","",221,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",222,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",222,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",222,null],[11,"next_back","","",222,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",223,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",65,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",67,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",223,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"clone","","",224,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",224,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"next_back","","",224,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",223,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"next","core::ops","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",65,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",225,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",225,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"next_back","","",225,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",226,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",226,null],[11,"next_back","","",226,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",226,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",226,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",226,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",227,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",227,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"next_back","","",227,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",227,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",160,null],[11,"fmt","","",160,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",160,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",160,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",228,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",228,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",228,null],[11,"next_back","","",228,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",229,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",229,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",230,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"next_back","","",230,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",231,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",231,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",231,null],[11,"next_back","","",231,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",160,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",232,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",233,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",234,null],[11,"fmt","","",234,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",234,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",234,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",234,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",234,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",234,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",234,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",234,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",234,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",234,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",234,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",234,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",234,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",234,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",234,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",234,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",234,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",234,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",234,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",234,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",234,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"next_back","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",236,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"next_back","","",236,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",237,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"next_back","","",237,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",234,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",238,null],[11,"next","","",238,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"count","","",238,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",238,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",238,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",238,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",238,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",239,null],[11,"next","","",239,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"count","","",239,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",239,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",239,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",239,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",240,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",240,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"next_back","","",240,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",240,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",241,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",241,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"next_back","","",241,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",242,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"next","","",243,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"next","","",244,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",244,null],[11,"next","","",245,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next","","",246,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"clone","","",247,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",247,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"count","","",247,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",247,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",247,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",247,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",248,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",248,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"count","","",248,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",248,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",248,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",248,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",249,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"count","","",249,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",249,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",249,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",249,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"eq","core::str","",250,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",250,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",250,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",250,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",250,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",251,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",251,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",251,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",251,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",251,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",251,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",252,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",252,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"next_back","","",252,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",252,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",253,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",253,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"next_back","","",253,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",253,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",254,null],[11,"count","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",254,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",254,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",255,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",256,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",256,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",257,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",257,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",256,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",257,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",258,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",258,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",259,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",259,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",258,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",259,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",260,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",261,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",261,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",262,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",262,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",263,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",264,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",264,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",265,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",265,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",264,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",265,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",266,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",267,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",267,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",268,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",268,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",267,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",268,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",269,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",269,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",269,null],[11,"next_back","","",269,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",270,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",271,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",271,null],[11,"call_mut","","",271,null],[11,"call_once","","",271,null],[11,"next","","",270,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"next_back","","",270,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",272,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",273,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",273,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",273,null],[11,"finish","","",273,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",273,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",273,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",274,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",274,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",274,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",275,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",275,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",275,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",276,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",276,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",276,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",277,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",277,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",277,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",278,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",278,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",278,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",279,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",280,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",281,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",282,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",283,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",283,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",284,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",284,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",284,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",285,null],[11,"entry","","Adds a new entry to the set output.",286,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",286,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",286,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",287,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",287,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",287,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",288,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",288,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",288,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",289,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",290,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",291,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",292,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",292,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",292,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",293,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",293,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",293,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",293,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",293,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",293,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",293,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",293,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",293,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",293,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",293,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",293,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",293,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",293,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",293,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",182,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",192,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","hyper::header::internals::cell","",159,{"inputs":[{"name":"optcell"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"optcell"}],"output":{"name":"optcell"}}],[11,"fmt","","",294,{"inputs":[{"name":"ptrmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"ptrmap"}],"output":{"name":"ptrmap"}}],[11,"new","","",295,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"get","","",295,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"get_mut","","",295,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"insert","","",295,null],[11,"one","","",295,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"v"}}],[11,"clone","","",295,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"clone","hyper::header::internals::item","",296,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"new_raw","","",296,{"inputs":[{"name":"item"},{"name":"vec"}],"output":{"name":"item"}}],[11,"new_typed","","",296,{"inputs":[{"name":"item"},{"name":"box"}],"output":{"name":"item"}}],[11,"mut_raw","","",296,{"inputs":[{"name":"item"}],"output":{"name":"vec"}}],[11,"raw","","",296,null],[11,"typed","","",296,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"typed_mut","","",296,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"fmt","","",296,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::charset","",297,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",297,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"charset"}],"output":{"name":"charset"}}],[11,"fmt","","",297,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",297,{"inputs":[{"name":"charset"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::shared::encoding","",298,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",298,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"clone","","",298,{"inputs":[{"name":"encoding"}],"output":{"name":"encoding"}}],[11,"fmt","","",298,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",298,{"inputs":[{"name":"encoding"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::entity","",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"entitytag"}],"output":{"name":"entitytag"}}],[11,"fmt","","",134,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",134,{"inputs":[{"name":"entitytag"},{"name":"str"}],"output":{"name":"result"}}],[11,"cmp","hyper::header::shared::httpdate","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"option"}}],[11,"lt","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"eq","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",299,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"fmt","","",299,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",299,{"inputs":[{"name":"httpdate"}],"output":{"name":"httpdate"}}],[11,"from_str","","",299,{"inputs":[{"name":"httpdate"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",299,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","hyper::header::shared::quality_item","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"option"}}],[11,"lt","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"eq","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"cmp","","",300,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"fmt","","",300,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",300,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",300,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",300,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",301,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",301,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",301,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"clone","","",301,{"inputs":[{"name":"qualityitem"}],"output":{"name":"qualityitem"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",301,{"inputs":[{"name":"qualityitem"},{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",301,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"option"}}],[11,"fmt","","",301,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",301,{"inputs":[{"name":"qualityitem"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","hyper::header::parsing","",302,{"inputs":[{"name":"extendedvalue"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"ne","","",302,{"inputs":[{"name":"extendedvalue"},{"name":"extendedvalue"}],"output":{"name":"bool"}}],[11,"fmt","","",302,{"inputs":[{"name":"extendedvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",302,{"inputs":[{"name":"extendedvalue"}],"output":{"name":"extendedvalue"}}],[11,"fmt","","",302,{"inputs":[{"name":"extendedvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","alloc::boxed","",95,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","hyper::header","",303,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",303,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",303,null],[11,"get_raw","","Access the raw value of a header.",303,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",303,null],[11,"remove_raw","","Remove a header set by set_raw",303,null],[11,"get","","Get a reference to the header field's value, if it exists.",303,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",303,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",303,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",303,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",303,{"inputs":[{"name":"headers"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",303,{"inputs":[{"name":"headers"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",303,null],[11,"eq","","",303,{"inputs":[{"name":"headers"},{"name":"headers"}],"output":{"name":"bool"}}],[11,"fmt","","",303,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",303,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",303,{"inputs":[{"name":"headers"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",303,{"inputs":[{"name":"headers"},{"name":"d"}],"output":{"name":"result"}}],[11,"next","","",304,{"inputs":[{"name":"headersitems"}],"output":{"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",305,{"inputs":[{"name":"headerview"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",305,{"inputs":[{"name":"headerview"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",305,{"inputs":[{"name":"headerview"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",305,{"inputs":[{"name":"headerview"}],"output":{"name":"string"}}],[11,"fmt","","",305,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",305,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",303,null],[11,"from_iter","","",303,{"inputs":[{"name":"headers"},{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",306,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",306,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"option"}}],[11,"lt","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"le","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"gt","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ge","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"eq","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ne","","",307,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"hash","","",307,null],[11,"clone","","",307,{"inputs":[{"name":"cowstr"}],"output":{"name":"cowstr"}}],[11,"deref","","",307,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"fmt","","",307,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",307,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref_mut","","",307,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"as_ref","","",307,{"inputs":[{"name":"cowstr"}],"output":{"name":"str"}}],[11,"fmt","hyper::http::h1","",308,{"inputs":[{"name":"wrapper"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",308,{"inputs":[{"name":"wrapper"},{"name":"t"}],"output":{"name":"wrapper"}}],[11,"map_in_place","","",308,null],[11,"into_inner","","",308,{"inputs":[{"name":"wrapper"}],"output":{"name":"t"}}],[11,"as_mut","","",308,{"inputs":[{"name":"wrapper"}],"output":{"name":"t"}}],[11,"as_ref","","",308,{"inputs":[{"name":"wrapper"}],"output":{"name":"t"}}],[11,"fmt","","",309,{"inputs":[{"name":"stream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",310,{"inputs":[{"name":"http11message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write","","",310,null],[11,"flush","","",310,{"inputs":[{"name":"http11message"}],"output":{"name":"result"}}],[11,"read","","",310,null],[11,"set_outgoing","","",310,{"inputs":[{"name":"http11message"},{"name":"requesthead"}],"output":{"name":"result"}}],[11,"get_incoming","","",310,{"inputs":[{"name":"http11message"}],"output":{"name":"result"}}],[11,"has_body","","",310,{"inputs":[{"name":"http11message"}],"output":{"name":"bool"}}],[11,"set_read_timeout","","",310,{"inputs":[{"name":"http11message"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",310,{"inputs":[{"name":"http11message"},{"name":"option"}],"output":{"name":"result"}}],[11,"close_connection","","",310,{"inputs":[{"name":"http11message"}],"output":{"name":"result"}}],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",310,{"inputs":[{"name":"http11message"}],"output":{"name":"box"}}],[11,"get_ref","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",310,{"inputs":[{"name":"http11message"}],"output":{"name":"networkstream"}}],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",310,{"inputs":[{"name":"http11message"}],"output":{"name":"networkstream"}}],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to\nthe peer.",310,{"inputs":[{"name":"http11message"},{"name":"box"}],"output":{"name":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",310,{"inputs":[{"name":"http11message"}],"output":{"name":"result"}}],[11,"new_message","","",311,{"inputs":[{"name":"http11protocol"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for\nestablishing HTTP connections.",311,{"inputs":[{"name":"http11protocol"},{"name":"c"}],"output":{"name":"http11protocol"}}],[11,"connect","","",312,{"inputs":[{"name":"connadapter"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"connect","","",313,{"inputs":[{"name":"connector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",314,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",314,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",314,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"fmt","","",314,{"inputs":[{"name":"httpreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",314,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",315,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_ref","","Access the inner Writer.",315,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",315,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",315,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"enderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",317,{"inputs":[{"name":"error"},{"name":"enderror"}],"output":{"name":"error"}}],[11,"write","hyper::http::h1","",315,null],[11,"flush","","",315,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"fmt","","",315,{"inputs":[{"name":"httpwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",318,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","hyper::http::h2","",319,{"inputs":[{"name":"http2stream"}],"output":{"name":"http2stream"}}],[11,"write","","",319,null],[11,"flush","","",319,{"inputs":[{"name":"http2stream"}],"output":{"name":"result"}}],[11,"read","","",319,null],[11,"try_split","","",319,{"inputs":[{"name":"http2stream"}],"output":{"name":"result"}}],[11,"close","","",319,{"inputs":[{"name":"http2stream"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"http2connecterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"http2connecterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",320,{"inputs":[{"name":"http2connecterror"}],"output":{"name":"str"}}],[11,"cause","","",320,{"inputs":[{"name":"http2connecterror"}],"output":{"name":"option"}}],[11,"from","","",320,{"inputs":[{"name":"http2connecterror"},{"name":"error"}],"output":{"name":"http2connecterror"}}],[11,"connect","","Establishes a network connection that can be used by HTTP/2 connections.",321,{"inputs":[{"name":"http2connector"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new `Http2Protocol` that will use the given `NetworkConnector` to establish TCP\nconnections to the server.",322,{"inputs":[{"name":"http2protocol"},{"name":"c"}],"output":{"name":"http2protocol"}}],[11,"new_message","","",322,{"inputs":[{"name":"http2protocol"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",323,{"inputs":[{"name":"http2request"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",323,{"inputs":[{"name":"http2request"}],"output":{"name":"http2request"}}],[11,"fmt","","",324,{"inputs":[{"name":"http2response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",324,{"inputs":[{"name":"http2response"}],"output":{"name":"http2response"}}],[11,"fmt","","",325,{"inputs":[{"name":"http2message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write","","",325,null],[11,"flush","","",325,{"inputs":[{"name":"http2message"}],"output":{"name":"result"}}],[11,"read","","",325,null],[11,"set_outgoing","","",325,{"inputs":[{"name":"http2message"},{"name":"requesthead"}],"output":{"name":"result"}}],[11,"get_incoming","","",325,{"inputs":[{"name":"http2message"}],"output":{"name":"result"}}],[11,"has_body","","",325,{"inputs":[{"name":"http2message"}],"output":{"name":"bool"}}],[11,"set_read_timeout","","",325,{"inputs":[{"name":"http2message"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",325,{"inputs":[{"name":"http2message"},{"name":"option"}],"output":{"name":"result"}}],[11,"close_connection","","",325,{"inputs":[{"name":"http2message"}],"output":{"name":"result"}}],[11,"fmt","hyper::http::message","",326,{"inputs":[{"name":"requesthead"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"requesthead"}],"output":{"name":"requesthead"}}],[11,"fmt","","",327,{"inputs":[{"name":"responsehead"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",327,{"inputs":[{"name":"responsehead"}],"output":{"name":"responsehead"}}],[11,"is","chill","Is the underlying type in this trait object a T?",328,{"inputs":[{"name":"httpmessage"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",328,{"inputs":[{"name":"httpmessage"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",328,{"inputs":[{"name":"httpmessage"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",328,{"inputs":[{"name":"httpmessage"}],"output":{"name":"result"}}],[11,"fmt","hyper::http","",329,{"inputs":[{"name":"rawstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",329,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"ne","","",329,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"clone","","",329,{"inputs":[{"name":"rawstatus"}],"output":{"name":"rawstatus"}}],[11,"serialize","","",329,{"inputs":[{"name":"rawstatus"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",329,{"inputs":[{"name":"rawstatus"},{"name":"d"}],"output":{"name":"result"}}],[11,"next","hyper::net","",330,{"inputs":[{"name":"networkconnections"}],"output":{"name":"option"}}],[11,"from","alloc::boxed","",95,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"fmt","","",95,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","chill","Is the underlying type in this trait object a T?",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a T?",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",331,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"clone","hyper::net","",332,{"inputs":[{"name":"httplistener"}],"output":{"name":"httplistener"}}],[11,"from","","",332,{"inputs":[{"name":"httplistener"},{"name":"tcplistener"}],"output":{"name":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",332,{"inputs":[{"name":"httplistener"},{"name":"to"}],"output":{"name":"result"}}],[11,"accept","","",332,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"local_addr","","",332,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",332,{"inputs":[{"name":"httplistener"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",332,{"inputs":[{"name":"httplistener"},{"name":"i32"}],"output":{"name":"httplistener"}}],[11,"clone","","",333,{"inputs":[{"name":"httpstream"}],"output":{"name":"httpstream"}}],[11,"fmt","","",333,{"inputs":[{"name":"httpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",333,null],[11,"write","","",333,null],[11,"flush","","",333,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",333,{"inputs":[{"name":"httpstream"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",333,{"inputs":[{"name":"httpstream"},{"name":"i32"}],"output":{"name":"httpstream"}}],[11,"peer_addr","","",333,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",333,{"inputs":[{"name":"httpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",333,{"inputs":[{"name":"httpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"close","","",333,{"inputs":[{"name":"httpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"default","","",334,{"inputs":[{"name":"httpconnector"}],"output":{"name":"httpconnector"}}],[11,"clone","","",334,{"inputs":[{"name":"httpconnector"}],"output":{"name":"httpconnector"}}],[11,"fmt","","",334,{"inputs":[{"name":"httpconnector"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","",334,{"inputs":[{"name":"httpconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",335,{"inputs":[{"name":"httpsstream"}],"output":{"name":"httpsstream"}}],[11,"fmt","","",335,{"inputs":[{"name":"httpsstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",335,null],[11,"write","","",335,null],[11,"flush","","",335,{"inputs":[{"name":"httpsstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",335,{"inputs":[{"name":"httpsstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",335,{"inputs":[{"name":"httpsstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",335,{"inputs":[{"name":"httpsstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"close","","",335,{"inputs":[{"name":"httpsstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"httpslistener"}],"output":{"name":"httpslistener"}}],[11,"new","","Start listening to an address over HTTPS.",336,{"inputs":[{"name":"httpslistener"},{"name":"to"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",336,{"inputs":[{"name":"httpslistener"},{"name":"httplistener"},{"name":"s"}],"output":{"name":"httpslistener"}}],[11,"accept","","",336,{"inputs":[{"name":"httpslistener"}],"output":{"name":"result"}}],[11,"local_addr","","",336,{"inputs":[{"name":"httpslistener"}],"output":{"name":"result"}}],[11,"default","","",337,{"inputs":[{"name":"httpsconnector"}],"output":{"name":"httpsconnector"}}],[11,"fmt","","",337,{"inputs":[{"name":"httpsconnector"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new connector using the provided SSL implementation.",337,{"inputs":[{"name":"httpsconnector"},{"name":"s"}],"output":{"name":"httpsconnector"}}],[11,"connect","","",337,{"inputs":[{"name":"httpsconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","hyper::net::openssl","",338,{"inputs":[{"name":"openssl"}],"output":{"name":"openssl"}}],[11,"fmt","","",338,{"inputs":[{"name":"openssl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",338,{"inputs":[{"name":"openssl"}],"output":{"name":"openssl"}}],[11,"with_cert_and_key","","Ease creating an `Openssl` with a certificate and key.",338,{"inputs":[{"name":"openssl"},{"name":"c"},{"name":"k"}],"output":{"name":"result"}}],[11,"wrap_client","","",338,{"inputs":[{"name":"openssl"},{"name":"httpstream"},{"name":"str"}],"output":{"name":"result"}}],[11,"wrap_server","","",338,{"inputs":[{"name":"openssl"},{"name":"httpstream"}],"output":{"name":"result"}}],[11,"peer_addr","openssl::ssl","",339,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",339,{"inputs":[{"name":"sslstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",339,{"inputs":[{"name":"sslstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"close","","",339,{"inputs":[{"name":"sslstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",340,{"inputs":[{"name":"request"},{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",340,{"inputs":[{"name":"request"},{"name":"option"}],"output":{"name":"result"}}],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",340,{"inputs":[{"name":"request"}],"output":{"name":"option"}}],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected\nover HTTPS.",340,{"inputs":[{"name":"request"}],"output":{"name":"option"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",340,null],[11,"read","","",340,null],[11,"fmt","hyper::server::response","",341,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","The status of this response.",341,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers","","The headers of this response.",341,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",341,{"inputs":[{"name":"response"},{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",341,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",341,{"inputs":[{"name":"response"},{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",341,null],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and\ncreating a Response<Streaming>",341,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",341,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",341,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",341,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"write","","",341,null],[11,"flush","","",341,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"eq","","",342,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",342,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"drop","","",341,null],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",343,{"inputs":[{"name":"listenerpool"},{"name":"a"}],"output":{"name":"listenerpool"}}],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",343,null],[11,"drop","","",344,null],[11,"fmt","hyper::server","",345,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",346,{"inputs":[{"name":"timeouts"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",346,{"inputs":[{"name":"timeouts"}],"output":{"name":"timeouts"}}],[11,"default","","",346,{"inputs":[{"name":"timeouts"}],"output":{"name":"timeouts"}}],[11,"new","","Creates a new server with the provided handler.",345,{"inputs":[{"name":"server"},{"name":"l"}],"output":{"name":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",345,null],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",345,null],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",345,null],[11,"http","","Creates a new server that will handle `HttpStream`s.",345,{"inputs":[{"name":"server"},{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",345,{"inputs":[{"name":"server"},{"name":"a"},{"name":"s"}],"output":{"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",345,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"result"}}],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided\nnumber of threads.",345,{"inputs":[{"name":"server"},{"name":"h"},{"name":"usize"}],"output":{"name":"result"}}],[11,"fmt","","",347,{"inputs":[{"name":"listening"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",347,null],[11,"close","","Warning: This function doesn't work. The server remains listening after you called\nit. See https://github.com/hyperium/hyper/issues/338 for more details.",347,{"inputs":[{"name":"listening"}],"output":{"name":"result"}}],[11,"hash","hyper::status","",348,null],[11,"fmt","","",348,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_success","","Check if class is Success.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"fmt","","",348,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",348,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",348,{"inputs":[{"name":"statuscode"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",348,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"cmp","","",348,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"cmp","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"option"}}],[11,"lt","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"le","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"gt","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ge","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"eq","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ne","","",349,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"clone","","",349,{"inputs":[{"name":"statusclass"}],"output":{"name":"statusclass"}}],[11,"fmt","","",349,{"inputs":[{"name":"statusclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_code","","Get the default status code for the class.",349,{"inputs":[{"name":"statusclass"}],"output":{"name":"statuscode"}}],[11,"clone","hyper::uri","",350,{"inputs":[{"name":"requesturi"}],"output":{"name":"requesturi"}}],[11,"eq","","",350,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"ne","","",350,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"fmt","","",350,{"inputs":[{"name":"requesturi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",350,{"inputs":[{"name":"requesturi"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",350,{"inputs":[{"name":"requesturi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::version","",351,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",351,null],[11,"cmp","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"clone","","",351,{"inputs":[{"name":"httpversion"}],"output":{"name":"httpversion"}}],[11,"partial_cmp","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"option"}}],[11,"lt","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"le","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"gt","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ge","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"eq","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ne","","",351,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"fmt","","",351,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"action","chill","",null,null],[3,"CreateDatabase","chill::action","",null,null],[3,"CreateDocument","","",null,null],[3,"DeleteDocument","","",null,null],[3,"ReadDocument","","",null,null],[3,"UpdateDocument","","",null,null],[11,"run","","",352,{"inputs":[{"name":"createdatabase"}],"output":{"name":"result"}}],[11,"with_document_id","","",353,{"inputs":[{"name":"createdocument"},{"name":"d"}],"output":{"name":"self"}}],[11,"run","","",353,{"inputs":[{"name":"createdocument"}],"output":{"name":"result"}}],[11,"run","","",354,{"inputs":[{"name":"deletedocument"}],"output":{"name":"result"}}],[11,"with_revision","","",355,{"inputs":[{"name":"readdocument"},{"name":"revision"}],"output":{"name":"self"}}],[11,"run","","",355,{"inputs":[{"name":"readdocument"}],"output":{"name":"result"}}],[11,"run","","",356,{"inputs":[{"name":"updatedocument"}],"output":{"name":"result"}}],[0,"path","chill","Types and traits for specifying databases, documents, views, etc.",null,null],[3,"DatabaseNameRef","chill::path","A reference to a\ndatabase \nname, owned elsewhere.",null,null],[3,"DatabaseName","","A heap-allocated\ndatabase \nname, owned and managed internally.",null,null],[3,"DesignDocumentNameRef","","A reference to a\ndesign document \nname, owned elsewhere.",null,null],[3,"DesignDocumentName","","A heap-allocated\ndesign document \nname, owned and managed internally.",null,null],[3,"LocalDocumentNameRef","","A reference to a\nlocal document \nname, owned elsewhere.",null,null],[3,"LocalDocumentName","","A heap-allocated\nlocal document \nname, owned and managed internally.",null,null],[3,"NormalDocumentNameRef","","A reference to a\nnormal document \nname, owned elsewhere.",null,null],[3,"NormalDocumentName","","A heap-allocated\nnormal document \nname, owned and managed internally.",null,null],[3,"DatabasePathRef","","",null,null],[3,"DatabasePath","","",null,null],[3,"DocumentPathRef","","",null,null],[3,"DocumentPath","","",null,null],[4,"DocumentIdRef","","",null,null],[4,"DocumentId","","",null,null],[11,"database_name","","",357,{"inputs":[{"name":"databasepathref"}],"output":{"name":"databasenameref"}}],[11,"database_name","","",358,{"inputs":[{"name":"databasepath"}],"output":{"name":"databasename"}}],[11,"as_ref","","",358,{"inputs":[{"name":"databasepath"}],"output":{"name":"databasepathref"}}],[11,"from","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepath"}],"output":{"name":"self"}}],[11,"from","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepathref"}],"output":{"name":"self"}}],[11,"into_database_path","","",357,{"inputs":[{"name":"databasepathref"}],"output":{"name":"result"}}],[11,"into_database_path","","",359,{"inputs":[{"name":"databasenameref"}],"output":{"name":"result"}}],[11,"as_ref","","",360,{"inputs":[{"name":"documentid"}],"output":{"name":"documentidref"}}],[11,"fmt","","",361,{"inputs":[{"name":"documentidref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",360,{"inputs":[{"name":"documentid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentid"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"documentidref"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"normaldocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"normaldocumentname"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"designdocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"designdocumentname"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"localdocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",361,{"inputs":[{"name":"documentidref"},{"name":"localdocumentname"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"normaldocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"normaldocumentname"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"designdocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"designdocumentname"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"localdocumentnameref"}],"output":{"name":"self"}}],[11,"from","","",360,{"inputs":[{"name":"documentid"},{"name":"localdocumentname"}],"output":{"name":"self"}}],[11,"database_name","","",362,{"inputs":[{"name":"documentpathref"}],"output":{"name":"databasenameref"}}],[11,"document_id","","",362,{"inputs":[{"name":"documentpathref"}],"output":{"name":"documentidref"}}],[11,"database_name","","",363,{"inputs":[{"name":"documentpath"}],"output":{"name":"databasename"}}],[11,"document_id","","",363,{"inputs":[{"name":"documentpath"}],"output":{"name":"documentid"}}],[11,"as_ref","","",363,{"inputs":[{"name":"documentpath"}],"output":{"name":"documentpathref"}}],[11,"from","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpath"}],"output":{"name":"self"}}],[11,"from","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpathref"}],"output":{"name":"self"}}],[11,"into_document_path","","",362,{"inputs":[{"name":"documentpathref"}],"output":{"name":"result"}}],[8,"IntoDatabasePath","","",null,null],[10,"into_database_path","","",364,{"inputs":[{"name":"intodatabasepath"}],"output":{"name":"result"}}],[8,"IntoDocumentPath","","",null,null],[10,"into_document_path","","",365,{"inputs":[{"name":"intodocumentpath"}],"output":{"name":"result"}}],[11,"partial_cmp","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"option"}}],[11,"lt","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"le","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"gt","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"ge","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"eq","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"ne","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"bool"}}],[11,"cmp","","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasenameref"}],"output":{"name":"ordering"}}],[11,"hash","","",359,null],[11,"fmt","","",359,{"inputs":[{"name":"databasenameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",359,{"inputs":[{"name":"databasenameref"}],"output":{"name":"databasenameref"}}],[11,"partial_cmp","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"option"}}],[11,"lt","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"le","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"gt","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"ge","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"eq","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"bool"}}],[11,"cmp","","",366,{"inputs":[{"name":"databasename"},{"name":"databasename"}],"output":{"name":"ordering"}}],[11,"hash","","",366,null],[11,"fmt","","",366,{"inputs":[{"name":"databasename"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",366,{"inputs":[{"name":"databasename"}],"output":{"name":"databasename"}}],[11,"as_ref","","",366,{"inputs":[{"name":"databasename"}],"output":{"name":"databasenameref"}}],[11,"as_ref","","",359,{"inputs":[{"name":"databasenameref"}],"output":{"name":"str"}}],[11,"as_ref","","",366,{"inputs":[{"name":"databasename"}],"output":{"name":"str"}}],[11,"fmt","","",359,{"inputs":[{"name":"databasenameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",366,{"inputs":[{"name":"databasename"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",359,{"inputs":[{"name":"databasenameref"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",366,{"inputs":[{"name":"databasename"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",366,{"inputs":[{"name":"databasename"},{"name":"string"}],"output":{"name":"self"}}],[11,"from","collections::string","",5,{"inputs":[{"name":"string"},{"name":"databasename"}],"output":{"name":"self"}}],[11,"from","chill::path","",359,{"inputs":[{"name":"databasenameref"},{"name":"databasename"}],"output":{"name":"self"}}],[11,"from","","",366,{"inputs":[{"name":"databasename"},{"name":"databasenameref"}],"output":{"name":"self"}}],[11,"partial_cmp","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"option"}}],[11,"lt","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"le","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"gt","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"ge","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"eq","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"bool"}}],[11,"cmp","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentnameref"}],"output":{"name":"ordering"}}],[11,"hash","","",367,null],[11,"fmt","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",367,{"inputs":[{"name":"designdocumentnameref"}],"output":{"name":"designdocumentnameref"}}],[11,"partial_cmp","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"option"}}],[11,"lt","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"le","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"gt","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"ge","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"eq","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"ne","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"bool"}}],[11,"cmp","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentname"}],"output":{"name":"ordering"}}],[11,"hash","","",368,null],[11,"fmt","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",368,{"inputs":[{"name":"designdocumentname"}],"output":{"name":"designdocumentname"}}],[11,"as_ref","","",368,{"inputs":[{"name":"designdocumentname"}],"output":{"name":"designdocumentnameref"}}],[11,"as_ref","","",367,{"inputs":[{"name":"designdocumentnameref"}],"output":{"name":"str"}}],[11,"as_ref","","",368,{"inputs":[{"name":"designdocumentname"}],"output":{"name":"str"}}],[11,"fmt","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"string"}],"output":{"name":"self"}}],[11,"from","collections::string","",5,{"inputs":[{"name":"string"},{"name":"designdocumentname"}],"output":{"name":"self"}}],[11,"from","chill::path","",367,{"inputs":[{"name":"designdocumentnameref"},{"name":"designdocumentname"}],"output":{"name":"self"}}],[11,"from","","",368,{"inputs":[{"name":"designdocumentname"},{"name":"designdocumentnameref"}],"output":{"name":"self"}}],[11,"partial_cmp","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"option"}}],[11,"lt","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"le","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"gt","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"ge","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"eq","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"ne","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"bool"}}],[11,"cmp","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentnameref"}],"output":{"name":"ordering"}}],[11,"hash","","",369,null],[11,"fmt","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",369,{"inputs":[{"name":"localdocumentnameref"}],"output":{"name":"localdocumentnameref"}}],[11,"partial_cmp","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"option"}}],[11,"lt","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"le","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"gt","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"ge","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"eq","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"ne","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"bool"}}],[11,"cmp","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentname"}],"output":{"name":"ordering"}}],[11,"hash","","",370,null],[11,"fmt","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",370,{"inputs":[{"name":"localdocumentname"}],"output":{"name":"localdocumentname"}}],[11,"as_ref","","",370,{"inputs":[{"name":"localdocumentname"}],"output":{"name":"localdocumentnameref"}}],[11,"as_ref","","",369,{"inputs":[{"name":"localdocumentnameref"}],"output":{"name":"str"}}],[11,"as_ref","","",370,{"inputs":[{"name":"localdocumentname"}],"output":{"name":"str"}}],[11,"fmt","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"string"}],"output":{"name":"self"}}],[11,"from","collections::string","",5,{"inputs":[{"name":"string"},{"name":"localdocumentname"}],"output":{"name":"self"}}],[11,"from","chill::path","",369,{"inputs":[{"name":"localdocumentnameref"},{"name":"localdocumentname"}],"output":{"name":"self"}}],[11,"from","","",370,{"inputs":[{"name":"localdocumentname"},{"name":"localdocumentnameref"}],"output":{"name":"self"}}],[11,"partial_cmp","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"option"}}],[11,"lt","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"le","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"gt","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"ge","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"eq","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"ne","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"bool"}}],[11,"cmp","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentnameref"}],"output":{"name":"ordering"}}],[11,"hash","","",371,null],[11,"fmt","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",371,{"inputs":[{"name":"normaldocumentnameref"}],"output":{"name":"normaldocumentnameref"}}],[11,"partial_cmp","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"option"}}],[11,"lt","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"le","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"gt","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"ge","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"eq","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"ne","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"bool"}}],[11,"cmp","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentname"}],"output":{"name":"ordering"}}],[11,"hash","","",372,null],[11,"fmt","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",372,{"inputs":[{"name":"normaldocumentname"}],"output":{"name":"normaldocumentname"}}],[11,"as_ref","","",372,{"inputs":[{"name":"normaldocumentname"}],"output":{"name":"normaldocumentnameref"}}],[11,"as_ref","","",371,{"inputs":[{"name":"normaldocumentnameref"}],"output":{"name":"str"}}],[11,"as_ref","","",372,{"inputs":[{"name":"normaldocumentname"}],"output":{"name":"str"}}],[11,"fmt","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"string"}],"output":{"name":"self"}}],[11,"from","collections::string","",5,{"inputs":[{"name":"string"},{"name":"normaldocumentname"}],"output":{"name":"self"}}],[11,"from","chill::path","",371,{"inputs":[{"name":"normaldocumentnameref"},{"name":"normaldocumentname"}],"output":{"name":"self"}}],[11,"from","","",372,{"inputs":[{"name":"normaldocumentname"},{"name":"normaldocumentnameref"}],"output":{"name":"self"}}],[11,"partial_cmp","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"option"}}],[11,"lt","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"le","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"gt","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"ge","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"eq","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"ne","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"bool"}}],[11,"cmp","","",361,{"inputs":[{"name":"documentidref"},{"name":"documentidref"}],"output":{"name":"ordering"}}],[11,"hash","","",361,null],[11,"fmt","","",361,{"inputs":[{"name":"documentidref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",361,{"inputs":[{"name":"documentidref"}],"output":{"name":"documentidref"}}],[11,"partial_cmp","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"option"}}],[11,"lt","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"le","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"gt","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"ge","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"eq","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"ne","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"bool"}}],[11,"cmp","","",360,{"inputs":[{"name":"documentid"},{"name":"documentid"}],"output":{"name":"ordering"}}],[11,"hash","","",360,null],[11,"fmt","","",360,{"inputs":[{"name":"documentid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",360,{"inputs":[{"name":"documentid"}],"output":{"name":"documentid"}}],[11,"partial_cmp","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"option"}}],[11,"lt","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"le","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"gt","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"ge","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"eq","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"ne","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"bool"}}],[11,"cmp","","",357,{"inputs":[{"name":"databasepathref"},{"name":"databasepathref"}],"output":{"name":"ordering"}}],[11,"hash","","",357,null],[11,"fmt","","",357,{"inputs":[{"name":"databasepathref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",357,{"inputs":[{"name":"databasepathref"}],"output":{"name":"databasepathref"}}],[11,"partial_cmp","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"option"}}],[11,"lt","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"le","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"gt","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"ge","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"eq","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"ne","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"bool"}}],[11,"cmp","","",358,{"inputs":[{"name":"databasepath"},{"name":"databasepath"}],"output":{"name":"ordering"}}],[11,"hash","","",358,null],[11,"fmt","","",358,{"inputs":[{"name":"databasepath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",358,{"inputs":[{"name":"databasepath"}],"output":{"name":"databasepath"}}],[11,"partial_cmp","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"option"}}],[11,"lt","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"le","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"gt","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"ge","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"eq","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"ne","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"bool"}}],[11,"cmp","","",362,{"inputs":[{"name":"documentpathref"},{"name":"documentpathref"}],"output":{"name":"ordering"}}],[11,"hash","","",362,null],[11,"fmt","","",362,{"inputs":[{"name":"documentpathref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",362,{"inputs":[{"name":"documentpathref"}],"output":{"name":"documentpathref"}}],[11,"partial_cmp","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"option"}}],[11,"lt","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"le","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"gt","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"ge","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"eq","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"bool"}}],[11,"cmp","","",363,{"inputs":[{"name":"documentpath"},{"name":"documentpath"}],"output":{"name":"ordering"}}],[11,"hash","","",363,null],[11,"fmt","","",363,{"inputs":[{"name":"documentpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",363,{"inputs":[{"name":"documentpath"}],"output":{"name":"documentpath"}}],[0,"testing","chill","Utilities for testing a CouchDB application.",null,null],[3,"FakeServer","chill::testing","Runs a CouchDB server process suitable for testing.",null,null],[11,"new","","Spawns a CouchDB server process.",373,{"inputs":[{"name":"fakeserver"}],"output":{"name":"result"}}],[11,"uri","","Returns the CouchDB server URI.",373,{"inputs":[{"name":"fakeserver"}],"output":{"name":"str"}}],[8,"IntoUrl","chill","Types that are convertible into a URL.",null,null]],"paths":[[4,"Error"],[3,"Client"],[3,"Document"],[3,"ErrorResponse"],[3,"Revision"],[3,"String"],[4,"Method"],[3,"BufReader"],[3,"Config"],[3,"PoolImpl"],[4,"Scheme"],[3,"Pool"],[3,"PooledStreamInner"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[4,"Error"],[4,"Void"],[3,"Accept"],[3,"Vec"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Root"],[3,"NodeRef"],[3,"Handle"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"AccessControlAllowCredentials"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[4,"RangeUnit"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[4,"ConnectionOption"],[3,"Connection"],[4,"DispositionType"],[4,"DispositionParam"],[3,"ContentDisposition"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentRange"],[4,"ContentRangeSpec"],[3,"ContentType"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Date"],[3,"ETag"],[3,"EntityTag"],[4,"Expect"],[3,"Expires"],[3,"From"],[3,"Host"],[4,"IfMatch"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[4,"IfRange"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[4,"Pragma"],[4,"Range"],[4,"ByteRangeSpec"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"ProtocolName"],[3,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"ExtendedValue"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[3,"CowStr"],[3,"Wrapper"],[4,"Stream"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"ConnAdapter"],[3,"Connector"],[4,"HttpReader"],[4,"HttpWriter"],[3,"EndError"],[3,"Error"],[3,"Incoming"],[3,"Http2Stream"],[3,"Http2ConnectError"],[3,"Http2Connector"],[3,"Http2Protocol"],[3,"Http2Request"],[3,"Http2Response"],[3,"Http2Message"],[3,"RequestHead"],[3,"ResponseHead"],[8,"HttpMessage"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[3,"HttpListener"],[3,"HttpStream"],[3,"HttpConnector"],[4,"HttpsStream"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Openssl"],[3,"SslStream"],[3,"Request"],[3,"Response"],[4,"Body"],[3,"ListenerPool"],[3,"Sentinel"],[3,"Server"],[3,"Timeouts"],[3,"Listening"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"CreateDatabase"],[3,"CreateDocument"],[3,"DeleteDocument"],[3,"ReadDocument"],[3,"UpdateDocument"],[3,"DatabasePathRef"],[3,"DatabasePath"],[3,"DatabaseNameRef"],[4,"DocumentId"],[4,"DocumentIdRef"],[3,"DocumentPathRef"],[3,"DocumentPath"],[8,"IntoDatabasePath"],[8,"IntoDocumentPath"],[3,"DatabaseName"],[3,"DesignDocumentNameRef"],[3,"DesignDocumentName"],[3,"LocalDocumentNameRef"],[3,"LocalDocumentName"],[3,"NormalDocumentNameRef"],[3,"NormalDocumentName"],[3,"FakeServer"]]};
initSearch(searchIndex);
